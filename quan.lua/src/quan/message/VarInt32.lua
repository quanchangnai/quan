---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by quanchangnai.
--- DateTime: 2021/8/5 18:27
---

--https://bitop.luajit.org/
local bit = require("bit")

---@module VarInt32 32位变长整数
local VarInt32 = {}

---从buffer里读取变长整数
---@param buffer quan.message.Buffer
---@param maxBytes 最多读几个字节，short:3，int:5，long:10
function VarInt32.readVarInt(buffer, maxBytes)
    --assert(maxBytes == 3 or maxBytes == 5, "不支持" .. tostring((maxBytes - 2) * 8) .. "位整数")

    local shift = 0
    local temp = 0
    local count = 0

    while count < maxBytes do
        if buffer:readableCount() < 1 then
            break
        end

        local b = buffer:readByte()
        temp = bit.bor(temp, bit.lshift(bit.band(b, 0x7F), shift))
        shift = shift + 7
        count = count + 1

        if bit.band(b, 0x80) == 0 then
            --ZigZag解码
            return bit.bxor(bit.rshift(temp, 1), -bit.band(temp, 1))
        end
    end

    error("读数据出错")
end

---往buffer写入变长整数
---@param buffer quan.message.Buffer
---@param maxBytes 最多写几个字节，short:3，int:5，long:10
function VarInt32.writeVarInt(buffer, n, maxBytes)
    --assert(maxBytes == 3 or maxBytes == 5, "不支持" .. tostring((maxBytes - 2) * 8) .. "位整数")

    --ZigZag编码
    n = bit.bxor(bit.lshift(n, 1), bit.arshift(n, 31))
    local shift = 0;
    local count = 0;

    while count < maxBytes do
        if (bit.band(n, bit.bnot(0x7F)) == 0) then
            buffer:writeByte(bit.band(n, 0x7F))
            return
        else
            buffer:writeByte(bit.bor(bit.band(n, 0x7F), 0x80))
            n = bit.rshift(n, 7)
            shift = shift + 7
            count = count + 1
        end
    end

    error("写数据出错")
end

return VarInt32